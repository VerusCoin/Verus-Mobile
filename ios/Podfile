require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../node_modules/react-native-permissions/scripts/setup'

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

$dynamic_frameworks = [
  'react-native-verus-light-client',
  'MnemonicSwift',
  'React',
  'React-Core',
  'RCT-Folly',
  'boost-for-react-native',
  'DoubleConversion',
  'glog',
  'React-cxxreact',
  'React-jsinspector',
  'React-callinvoker',
  'React-runtimeexecutor',
  'React-jsi',
  'React-perflogger',
  'React-jsiexecutor',
  'Yoga',
  'React-RCTActionSheet',
  'React-RCTAnimation',
  'RCTTypeSafety',
  'FBLazyVector',
  'RCTRequired',
  'ReactCommon',
  'FBReactNativeSpec',
  'React-RCTBlob',
  'React-RCTNetwork',
  'React-RCTImage',
  'React-RCTLinking',
  'React-RCTSettings',
  'React-RCTText',
  'React-RCTVibration',
  'ZcashLightClientKit',
  'gRPC-Swift',
  'Logging',
  'SwiftNIO',
  'CNIOLinux',
  'CNIODarwin',
  'CNIOWindows',
  'SwiftNIOConcurrencyHelpers',
  'CNIOAtomics',
  'SwiftNIOHTTP2',
  'SwiftNIOHTTP1',
  'CNIOHTTPParser',
  'SwiftNIOTLS',
  'SwiftNIOHPACK',
  'SwiftNIOSSL',
  'CNIOBoringSSL',
  'CNIOBoringSSLShims',
  'SwiftNIOTransportServices',
  'SwiftNIOFoundationCompat',
  'SwiftProtobuf',
  'CGRPCZlib',
  'SQLite.swift',
  'SwiftNIOCore',
  '_NIODataStructures',
  'SwiftNIOPosix',
  'SwiftNIOEmbedded',
  'boost',
  'fmt',
  'React-logger',
  'React-Codegen'
]

platform :ios, '13.0'
prepare_react_native_project!

setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  'Camera',
  # 'Contacts',
  'FaceID',
  # 'LocationAccuracy',
  # 'LocationAlways',
  # 'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  # 'Notifications',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])
 
# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
 
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

pre_install do |installer|
  installer.pod_targets.each do |pod|
    if !$dynamic_frameworks.include?(pod.name)
      puts "Overriding the static_framework? method for #{pod.name}"
      def pod.build_type;
        Pod::BuildType.static_library
      end
    end
  end
end

target 'verusmobile' do
  config = use_native_modules!
  use_modular_headers!
  permissions_path = '../node_modules/react-native-permissions/ios'

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Pods for Verus-Mobile
  pod 'ZcashLightClientKit', :git => 'https://github.com/VerusCoin/ZcashLightClientKit.git', :branch => '0.9.1', :testspecs => ['Tests']
  pod 'MnemonicSwift', '~> 2.0.0'
  #pod 'Permission-Camera', :path => "#{permissions_path}/Camera/Permission-Camera.podspec"
  #pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary/Permission-PhotoLibrary.podspec"
  pod 'SwiftNIO', '2.40.0'
  pod 'CocoaAsyncSocket'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec', :modular_headers => false

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!({ 'Flipper' => '0.159.0', 'Flipper-Folly' => '2.6.10', 'Flipper-DoubleConversion' => '3.2.0', 'Flipper-Glog' => '0.5.0.3', 'Flipper-PeerTalk' => '0.0.4', 'OpenSSL-Universal' => '1.1.1100' })

  post_install do |installer|
    #flipper_post_install(installer)
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|


        if target.name == 'ZcashLightClientKit'
           config.build_settings['ZCASH_NETWORK_ENVIRONMENT'] = ENV["ZCASH_NETWORK_ENVIRONMENT"]
        end
        config.build_settings['ENABLE_BITCODE'] = 'NO'
      end
    end
  end
end
